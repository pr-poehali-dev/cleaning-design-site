import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Textarea } from '@/components/ui/textarea';
import Icon from '@/components/ui/icon';
import { useToast } from '@/hooks/use-toast';

interface Service {
  id: string;
  name: string;
  price: number;
  icon: string;
  description: string;
  includes: string[];
}

interface HeaderProps {
  serviceType: string;
  setServiceType: (type: string) => void;
  area: string;
  setArea: (area: string) => void;
  services: Service[];
  calculatePrice: () => number;
  onInfoClick: () => void;
}

const Header = ({
  serviceType,
  setServiceType,
  area,
  setArea,
  services,
  calculatePrice,
  onInfoClick,
}: HeaderProps) => {
  const [isChatOpen, setIsChatOpen] = useState(false);
  const [name, setName] = useState('');
  const [phone, setPhone] = useState('');
  const [message, setMessage] = useState('');
  const [isStarted, setIsStarted] = useState(false);
  const { toast } = useToast();

  const handleStart = () => {
    if (!name.trim() || !phone.trim()) {
      toast({
        title: "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ",
        description: "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω –¥–ª—è –Ω–∞—á–∞–ª–∞ —á–∞—Ç–∞",
        variant: "destructive",
      });
      return;
    }
    setIsStarted(true);
    toast({
      title: "–ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—Å—è —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É",
      description: "–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!",
    });
  };

  const handleSendMessage = () => {
    if (!message.trim()) return;
    
    toast({
      title: "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ",
      description: "–ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∏—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ –º–∏–Ω—É—Ç—ã",
    });
    setMessage('');
  };

  return (
    <header className="bg-gray-700 border-b border-gray-600 sticky top-0 z-50">
      <div className="max-w-7xl mx-auto px-4 py-4">
        <div className="flex items-center justify-between gap-6">
          <h2 className="font-heading text-3xl font-bold shrink-0 bg-gradient-to-r from-yellow-200 via-yellow-400 to-yellow-600 bg-clip-text text-transparent drop-shadow-[0_0_15px_rgba(250,204,21,0.8)] hover:drop-shadow-[0_0_25px_rgba(250,204,21,1)] transition-all duration-300">
            p9&clean
          </h2>

          <div className="hidden lg:flex items-center gap-3 flex-1 justify-end">
            <div className="bg-white/10 px-4 py-2 rounded-lg border border-yellow-400/50 flex items-center gap-2">
              <Select value={serviceType} onValueChange={setServiceType}>
                <SelectTrigger className="w-[140px] border-0 bg-transparent text-white">
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  {services.map(service => (
                    <SelectItem key={service.id} value={service.id}>
                      {service.name}
                    </SelectItem>
                  ))}
                </SelectContent>
              </Select>
              <Button
                size="sm"
                variant="ghost"
                className="h-8 w-8 p-0 text-yellow-400 hover:text-yellow-300 hover:bg-white/10"
                onClick={onInfoClick}
              >
                <Icon name="Info" size={16} />
              </Button>
            </div>
            
            <div className="bg-white/10 px-4 py-2 rounded-lg border border-yellow-400/50 flex items-center gap-2">
              <Input
                type="number"
                value={area}
                onChange={(e) => setArea(e.target.value)}
                min="20"
                max="500"
                className="w-20 border-0 bg-transparent text-white text-center"
              />
              <span className="text-yellow-400">–º¬≤</span>
            </div>

            <div className="bg-yellow-400 px-5 py-2 rounded-lg">
              <div className="flex items-center gap-2">
                <Icon name="Calculator" size={18} className="text-black" />
                <span className="text-black font-bold text-xl">{calculatePrice()}‚ÇΩ</span>
              </div>
            </div>

            <Button 
              className="bg-yellow-400 text-black hover:bg-yellow-500 font-semibold px-5 py-2 h-auto text-lg uppercase"
              onClick={() => setIsChatOpen(!isChatOpen)}
            >
              <Icon name="MessageCircle" size={20} />
              <span className="ml-2">–û–Ω–ª–∞–π–Ω —á–∞—Ç</span>
            </Button>

            <Button 
              className="btn-shine bg-transparent text-white hover:bg-transparent font-semibold px-8 py-3 h-auto text-lg uppercase"
              onClick={() => document.getElementById('booking')?.scrollIntoView({ behavior: 'smooth' })}
            >
              –ó–∞–ø–∏—Å–∞—Ç—å—Å—è
            </Button>
          </div>

          <div className="flex items-center gap-2 lg:hidden">
            <Button 
              className="bg-yellow-400 text-black hover:bg-yellow-500 font-semibold"
              onClick={() => setIsChatOpen(!isChatOpen)}
            >
              <Icon name="MessageCircle" size={18} />
            </Button>
            
            <Button 
              className="btn-shine bg-transparent text-white hover:bg-transparent font-semibold text-sm px-4 uppercase"
              onClick={() => document.getElementById('booking')?.scrollIntoView({ behavior: 'smooth' })}
            >
              –ó–∞–ø–∏—Å–∞—Ç—å—Å—è
            </Button>
          </div>
        </div>

        <div className="lg:hidden mt-3 flex flex-wrap items-center gap-2">
          <div className="flex-1 min-w-[120px] bg-white/10 px-3 py-2 rounded-lg border border-yellow-400/50 flex items-center gap-2">
            <Select value={serviceType} onValueChange={setServiceType}>
              <SelectTrigger className="flex-1 border-0 bg-transparent text-white text-sm">
                <SelectValue />
              </SelectTrigger>
              <SelectContent>
                {services.map(service => (
                  <SelectItem key={service.id} value={service.id}>
                    {service.name}
                  </SelectItem>
                ))}
              </SelectContent>
            </Select>
            <Button
              size="sm"
              variant="ghost"
              className="h-6 w-6 p-0 text-yellow-400 hover:text-yellow-300"
              onClick={onInfoClick}
            >
              <Icon name="Info" size={14} />
            </Button>
          </div>
          
          <div className="bg-white/10 px-3 py-2 rounded-lg border border-yellow-400/50 flex items-center gap-2">
            <Input
              type="number"
              value={area}
              onChange={(e) => setArea(e.target.value)}
              min="20"
              max="500"
              className="w-14 border-0 bg-transparent text-white text-center text-sm"
            />
            <span className="text-yellow-400 text-sm">–º¬≤</span>
          </div>

          <div className="bg-yellow-400 px-3 py-2 rounded-lg">
            <div className="flex items-center gap-2">
              <Icon name="Calculator" size={16} className="text-black" />
              <span className="text-black font-bold">{calculatePrice()}‚ÇΩ</span>
            </div>
          </div>
        </div>
      </div>

      {isChatOpen && (
        <div className="absolute top-full right-4 mt-2 w-96 bg-white rounded-2xl shadow-2xl border-2 border-yellow-400 overflow-hidden animate-in slide-in-from-top-5 z-50">
          <div className="bg-gradient-to-r from-yellow-400 to-yellow-500 text-black p-4">
            <div className="flex items-center justify-between">
              <div className="flex items-center gap-3">
                <div className="w-10 h-10 bg-black/10 rounded-full flex items-center justify-center">
                  <Icon name="MessageCircle" size={24} />
                </div>
                <div>
                  <h3 className="font-bold text-lg">–û–Ω–ª–∞–π–Ω —á–∞—Ç</h3>
                  <p className="text-xs text-black/80">–û—Ç–≤–µ—Ç–∏–º –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã</p>
                </div>
              </div>
              <Button
                variant="ghost"
                size="sm"
                className="h-8 w-8 p-0 hover:bg-black/10"
                onClick={() => setIsChatOpen(false)}
              >
                <Icon name="X" size={20} />
              </Button>
            </div>
          </div>

          <div className="p-4 max-h-[400px] overflow-y-auto">
            {!isStarted ? (
              <div className="space-y-4">
                <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-3 mb-4">
                  <div className="flex items-start gap-2">
                    <Icon name="Sparkles" size={18} className="text-yellow-600 mt-0.5" />
                    <div className="flex-1">
                      <p className="text-xs text-yellow-600 font-semibold">p9&clean</p>
                      <p className="text-sm text-gray-700 mt-1">
                        –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! üëã –ú—ã –æ–Ω–ª–∞–π–Ω –∏ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å —Å –≤—ã–±–æ—Ä–æ–º –∫–ª–∏–Ω–∏–Ω–≥–æ–≤—ã—Ö —É—Å–ª—É–≥. –û—Å—Ç–∞–≤—å—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã, –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∏—Ç –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã!
                      </p>
                    </div>
                  </div>
                </div>
                
                <div>
                  <label className="text-sm font-medium text-gray-700 mb-1 block">
                    –í–∞—à–µ –∏–º—è
                  </label>
                  <Input
                    value={name}
                    onChange={(e) => setName(e.target.value)}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è"
                    className="w-full"
                  />
                </div>

                <div>
                  <label className="text-sm font-medium text-gray-700 mb-1 block">
                    –¢–µ–ª–µ—Ñ–æ–Ω
                  </label>
                  <Input
                    value={phone}
                    onChange={(e) => setPhone(e.target.value)}
                    placeholder="+7 (914) 196-51-72"
                    type="tel"
                    className="w-full"
                  />
                </div>

                <Button
                  onClick={handleStart}
                  className="w-full bg-gradient-to-r from-yellow-400 to-yellow-500 text-black hover:from-yellow-500 hover:to-yellow-600 font-semibold"
                >
                  –ù–∞—á–∞—Ç—å —á–∞—Ç
                  <Icon name="Send" className="ml-2" size={18} />
                </Button>
              </div>
            ) : (
              <div className="space-y-4">
                <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-3">
                  <div className="flex items-start gap-2">
                    <Icon name="User" size={18} className="text-yellow-600 mt-0.5" />
                    <div className="flex-1">
                      <p className="text-xs text-yellow-600 font-semibold">–ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç</p>
                      <p className="text-sm text-gray-700 mt-1">
                        –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {name}! –Ø –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?
                      </p>
                    </div>
                  </div>
                </div>

                <div className="space-y-2">
                  <Textarea
                    value={message}
                    onChange={(e) => setMessage(e.target.value)}
                    placeholder="–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å..."
                    className="w-full min-h-[80px] resize-none"
                    onKeyDown={(e) => {
                      if (e.key === 'Enter' && !e.shiftKey) {
                        e.preventDefault();
                        handleSendMessage();
                      }
                    }}
                  />
                  <Button
                    onClick={handleSendMessage}
                    className="w-full bg-gradient-to-r from-yellow-400 to-yellow-500 text-black hover:from-yellow-500 hover:to-yellow-600 font-semibold"
                  >
                    –û—Ç–ø—Ä–∞–≤–∏—Ç—å
                    <Icon name="Send" className="ml-2" size={18} />
                  </Button>
                </div>
              </div>
            )}
          </div>
        </div>
      )}
    </header>
  );
};

export default Header;